c
@user.followers.count
@user.following.count
c
current_user.liked? tweet
current_user.like tweet
current_user.like? tweet
current_user.liked? tweet
c
current_user.tweets
@tweet = current_user.tweets.find(params[:id])
c
 @tweet = current_user.tweets.find(params[:id])
like_tweet_path(tweet)
c
@tweet = current_user.tweets.find_by(id: params[:id])
:id
@tweet = Tweet.find(params[1])
@tweet = Tweet.find(params[2])
Tweet
@tweet = Tweet.find(params[:user_id])
@tweet = tweet.find(params[:user_id])
@tweet = current_user.tweets.find(params[:user_id])
@tweet
@tweet = current_user.tweets.find(params[:id])
@tweet = Tweet.find(params[:id])
@tweet = current_user.tweets.find_by(id: params[:id])
@tweet=Tweet.find(2)
@tweet = current_user.tweets.find_by(id: params[:id])
@tweet = Tweet.find(params[:id]) if params[:id]
 @tweet = current_user.tweets.find(params[:id])
 @tweet = current_user.tweets.find(id: params[:id])
 @tweet = current_user.tweets.find_by(id: params[:id])
@tweet=Tweet.find(params([]))
@tweet=Tweet.find(params([:id]))
params([:id])
params(:id)
params
params[:id]
@tweet=Tweet.find(2)
:id
Tweet
@tweet=Tweet.find(params[:id])
@tweet=Tweets.find(params[:id])
c
like_tweet_path(tweet,'like')
current_user.liked? tweet
c
clear
c
like_tweet_path(tweet, 'like')
like_tweet_path(tweet)
like_tweet_path
c
current_user.liked? tweet
current_user.liked?
current_user.liked
c
current_user.tweets.get_upvotes.size
c
@users.liked_by
@tweets.liked_by current_user
tweet.liked_by current_user
current_user.tweets.find(params[:id])
current_user.tweets
User
@user.
Users.find(params[:id])
User.find(params[:id])
Tweet.find(params[:id])
Tweet
c
@tweet.get_upvotes.size 
@user.get_upvotes.size 
c
current_user.tweets.find(params[:id])
User.find(params[:id])
User
params
params[]
params[:id]
Tweet.find(params[:user_id])
Tweet.find(params[:id])
Tweet.find(params[])
Tweet.find(params[:id])
Tweet
tweet
tweets
c
@user
@user.get_upvotes.size
user.get_upvotes.size
c
 current_user.tweets.get_upvotes.size
c
like_tweet_path(current_user.tweets)
render 'shared/tweet_form
like_tweet_path(@tweet)
c
current_user.tweets
@tweet
like_tweet_path(@tweet)
c
link_to like_post_path(@post), method: :put do
<%= link_to like_post_path(@post), method: :put do %>
@tweets.upvote_by current_user
@tweets=current_user.tweets.find(params[:id])
current_user.tweets.find(params[:id])
c
current_user.tweets
current_user
@tweet
c
like_tweet_path(@tweet)
like_tweet_path(@tweet.id)
like_tweet_path(@tweet)
like_post_path(@tweet)
@tweet
tweet
like_post_path
c
reset_session
user&.authenticate(params[:session][:password])
c
self.class
@user.class
user.class
User.class
self.class
self.class.digest(remember_token)
c
self.remember_token = self.class.new_token
c
remember_token
self.class.digest(remember_token)
digest
remember(user)
c
BCrypt::Password.create("string", cost: cost)
BCrypt::Password.create(string, cost: cost)
BCrypt::Password.create(cost: cost)
BCrypt::Password.create(integer, cost: cost)
BCrypt::Password.create(string, cost: cost)
cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST : BCrypt::Engine.cost
        BCrypt::Password.create(string, cost: cost)
cost = ActiveModel::SecurePassword.min_cost 
self.class.digest
self.class.digest(remember_token)
self.class.digest(remember_token))
self.remember_token
self.remember_token = self.class.new_token
self.remember_token
self.class.digest(remember_token)
elf.class.digest(remember_token)
self.class.new_token
c
self.class.digest(remember_token)
remember_token
self.class.new_token
c
User.find_by!(id: params[:id])
User.find_by!(slug: params[:id])
params[:id]
User.find_by!(params[:id])
slug
slug:
params[:id]
param[:id]
User.find_by!(slug: params[:id])
SELECT "users".* FROM "users" WHERE "users"."slug" = 5
SELECT "users".* FROM "users" WHERE "users"."slug" = $1 LIMIT $2  [["slug", "6"], ["LIMIT", 1]]
User.find_by!(slug: params[:id])
User.find_by!(params[:id])
User.find_by!(slug: params[:id])
c
edit_user_path(current_user)
c
quit
logged_in_user
:logged_in_user
quit
current_user
continue
@user.save!
@user
continue
@user.save!
@user.password = user_params[:password]
user_params
@user.save!
@user
continue
user_params
